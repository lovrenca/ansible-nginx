---
- name: Make sites-enabled directory
  file:
    path: /etc/nginx
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Nginx main config
  template:
    src: "{{ nginx_main_config }}"
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx

- name: Make sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Make conf.d directory
  file:
    path: /etc/nginx/conf.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Delete default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Nginx main includes
  copy:
    src: conf.d/
    dest: /etc/nginx/conf.d/
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx

- name: Nginx custom include configs
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx
  with_fileglob:
    - "{{ nginx_includes_dir }}/*.inc"
  when: nginx_includes_dir is defined

- name: Nginx main sub-config overrides
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx
  with_fileglob:
    - "{{ nginx_includes_dir }}/*.conf"
  when: nginx_includes_dir is defined

- name: Nginx CI main enabled sites
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-enabled
    owner: root
    group: root
    mode: 0644
    force: yes
    backup: yes
  notify: Reload nginx
  with_fileglob:
    - "{{ nginx_config_files }}/*main.conf"

- name: Nginx CI upstream enabled sites
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/sites-enabled/"
    owner: root
    group: root
    mode: 0644
    force: no
  notify: Reload nginx
  with_fileglob:
      - "{{ nginx_config_files }}/*upstream.conf"

- name: Nginx static enabled sites
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-enabled
    owner: root
    group: root
    mode: 0644
    force: yes
    backup: yes
  notify: Reload nginx
  with_fileglob:
      - "{{ nginx_config_files }}/*static.conf"

- name: Nginx custom includes
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: Reload nginx
  with_fileglob:
      - "{{ nginx_config_files }}/*include.conf"

- name: Allow HTTP
  ufw:
    port: 80
    proto: tcp
    rule: allow

- name: Allow HTTPS
  ufw:
    port: 443
    proto: tcp
    rule: allow

- name: Enable nginx service
  service:
    name: nginx
    enabled: yes
  when:
    - ansible_os_family == "Debian"
    - ansible_lsb.id == "Ubuntu"
    - ansible_lsb.major_release|int > 14
